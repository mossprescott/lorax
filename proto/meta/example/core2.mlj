(use 'meta.core)

(make-node :clojure/core/program [
  (make-node :clojure/core/doc { :string "Examples using the core syntax..."})
   
  (make-node :clojure/core/comment {
    :expr
    (make-node :clojure/core/fraction {
      :num
      (make-node :clojure/kernel/int { :value 1 })

      :denom
      (make-node :clojure/kernel/int { :value 0 })
    })
  })
  
  (make-node :clojure/core/not {
    :expr
    (make-node :clojure/kernel/true)
  })
  
  (make-node :clojure/core/unaryminus {
    :expr
    (make-node :clojure/kernel/int { :value 137 })
  })

  (make-node :clojure/core/sqrt {
    :expr
    (make-node :clojure/kernel/int { :value 4 })
  })
  
  (make-node :clojure/core/sqrt {
    :expr
    (make-node :clojure/core/times {
      :left
      (make-node :clojure/kernel/int { :value 4 })
      :right
      (make-node :clojure/kernel/int { :value 9 })
    })
  })
  
  (make-node :clojure/core/times {
    :left
    (make-node :clojure/core/fraction {
      :num
      (make-node :clojure/kernel/int { :value 1 })

      :denom
      (make-node :clojure/kernel/int { :value 3 })
    })
    
    :right
    (make-node :clojure/kernel/int { :value 100 })
  })
  
  (make-node :clojure/core/square {
    :expr
    (make-node :clojure/core/times {
      :left
      (make-node :clojure/kernel/int { :value 2 })
      
      :right
      (make-node :clojure/core/sqrt {
        :expr
        (make-node :clojure/core/square {
          :expr
          (make-node :clojure/kernel/int { :value 3 })
        })
      })
    })
  })

  ; (make-node :clojure/core/and {
  ;   :left
  ;   (make-node :clojure/kernel/true)
  ;   
  ;   :right
  ;   (make-node :clojure/kernel/false)
  ; })
  ; 
  ; (node :clojure/core/greater
  ;   :left
  ;   (node :clojure/core/times
  ;     :left 
  ;     (node :clojure/kernel/int :value 11)
  ;     
  ;     :right
  ;     (node :clojure/kernel/int :value 4))
  ;   
  ;   :right
  ;   (node :clojure/kernel/int :value 42))
  ; 
  ; (node :clojure/core/factorial
  ;   :expr
  ;   (node :clojure/kernel/int :value 4))
  ; 
  ; (node :clojure/core/factorial
  ;   :expr
  ;   (node :clojure/core/times
  ;     :left
  ;     (node :clojure/kernel/int :value 2)
  ;     
  ;     :right
  ;     (node :clojure/kernel/int :value 10)))
  ])
